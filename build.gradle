plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.6'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.hrbank'
version = '0.0.1-SNAPSHOT'
description = 'hrbank'

//java {
//	toolchain {
//		languageVersion = JavaLanguageVersion.of(17)
//	}
//}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.6'
    implementation 'org.mapstruct:mapstruct:1.5.5.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'

    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'
    annotationProcessor 'jakarta.annotation:jakarta.annotation-api'
    annotationProcessor 'jakarta.persistence:jakarta.persistence-api'
}

tasks.named('test') {
	useJUnitPlatform()
}

// QueryDSL 세팅
sourceSets {
    main {
        java {
            srcDirs += files("build/generated/sources/annotationProcessor/java/main")
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.compilerArgs += [
            "-Aquerydsl.entityAccessors=true",
            "-Aquerydsl.useFields=true"
    ]
}

// Spring Boot 실행 가능 Jar 생성을 명시적으로 활성화
bootJar {
    enabled = true
}

// Spring Boot 플러그인이 비활성화하지만, 만약을 위해 일반 Jar 생성은 비활성화
jar {
    enabled = false
}

